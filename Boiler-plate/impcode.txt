****how to fix sticky header on scroll?--------

window.addEventListener('scroll', function(){
	var header = document.querySelector('header');
	header.classList.toggle('sticky', window.scrollY > 0);
});

*******width ----------
clamp(1024px,85%,100%), max(1024px,calc(85% + 100px))

******<--- break loop --->

var found = false;
for(var i = 0; i < vendors.length; i++) {
    if (vendors[i].Name == 'Magenic') {
        found = true;
        break;
    }
}

----- anethor way -----
function name() {
    try {
        ...

        //get out of here
        if (a == 'stop')
            throw "exit";

        ...
    } catch (e) {
        // TODO: handle exception
    }
}

*********is element exist  ------------

function isElementExist(elementId) {
    var element = $('#' + elementId);
    return element != null && element != undefined && element.length > 0;
}

function isClassElementExists(elementId) {
    var element = $('.' + elementId);
    return element != null && element != undefined && element.length > 0;
}


*********** change annotation name in git ************
$ git config --global user.name "John Smith"

mvn compile -Dskip.yarn

<--- checkboxes checked with id started with ppl ---->
jQuery('input:checkbox[id^="ppl"]', "#plazaPremiumLounge").each(function() {

<--normal check --->
travelChecked = $('#travelId').is(':checked');

<-- checkboxes duolictae issue --->
var idString = '';
var tripTypeDiv
tripTypeDiv = ",#onwardTripDiv";
jQuery('input:checkbox[id^="ppl"]'+tripTypeDiv).each(function() {
	   var currentId = this.id;
   if (jQuery(this).is(":checked")) {
	   if (!(idString.includes(currentId))) {
		   console.log('checked'+this.id);
		   console.log('checked'+$('#'+this.id).val());
		   var pplAmnt = parseInt($('#'+this.id).val());
		   console.log(pplAmnt,typeof pplAmnt,'pplamnt');
		   pplTotalAmt = pplTotalAmt + pplAmnt;
		   console.log("pplTotalAmt",pplTotalAmt);
		   $('#pplTotalAmountId').text(pplTotalAmt);
		   $('#tempPPLAmountInput').val(pplTotalAmt);
		   c11111++;
		   idString = idString+ '-' + currentId;
	   }
   }
 });
 
 <----- restrict spaces and charectors ------->
 oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');"
 
 <--- print array size --->
 <span th:text="${#lists.size(searchInfo.multiCityInfoList)}">[Engine Size]</span> in themeleafe

<--- for firefox css --->
@-moz-document url-prefix() {}

<---- loders ---->
https://lottiefiles.com/

<-- star rating functionality JS-->
https://codepen.io/naulacambra/pen/gbzvPa

<--- install parcel for live reload --->
1.npm i parcel-bundler -g to run parcel watch index.html

2. npm i lite-server   to run lite-server

<------------ to match path ---------->

#httpServletRequest.getRequestURI().contains('/in/flights') or #httpServletRequest.getRequestURI() == '/'

< --- hide scroll bars in all browsers --->
div.bhoechie-tab-menu::-webkit-scrollbar {
    display: none;
}
div.bhoechie-tab-menu {
    -ms-overflow-style: none;
    scrollbar-width: none;
}

< --- remove () parenthesis from input value --- >
var value = 'Hyderabad (HYD)'
    value.replace(/[()]/g, '');
	
	function populateMatches(value) {
    var matches = [];
    var cleanValue = value.replace(/[()]/g, '');
    var substringRegex = new RegExp(cleanValue, 'i');
    $.each(cities, function (i, obj) {
        if (substringRegex.test(obj.airport) || substringRegex.test(obj.code) || substringRegex.test(obj.city)) {
            matches.push(obj);
        }
    });
    return matches;
}

var matches populateMatches(pass input value here);

<---- print keys or values of obnject ---->
const object1 = {
  a: 'somestring',
  b: 42,
  c: false,
};

console.log(Object.values(object1));
// Expected output: Array ["a", "b", "c"]



// jquery select drop down
https://jqueryniceselect.hernansartorio.com


// code for browser back button
jQuery(document).ready(function($) {

if (window.history && window.history.pushState) {

window.history.pushState('forward', null, './#forward');

$(window).on('popstate', function() {
alert('Back button was pressed.');
});

}
});

//code for jQuery ajax with async and await
function processRequestAndReturnResultForCodWithPromise(requestURL, formId) {
    return new Promise((resolve, reject) => {
        requestURL = appendVisitorIdAndSearchKeyToRequestURL(requestURL);
        let serializedData = '';
        if (formId != '' && formId != null && formId != undefined) {
            serializedData = jQuery('#' + formId).serialize();
        }
        $.ajax({
            url: requestURL,
            data: serializedData,
            type: "POST",
            success: function (response) {
                resolve(response);
            },
            error: function (xhr, status, error) {
                console.error("Error in makeRequestAndHandleResponse:", error);
                reject({xhr, status, error});
                if (xhr.status === 600) {
                    console.log('xhr status error 600', xhr.status === 600);
                    submitForm(document.logoutForm, '/user/sign-out');
                }
            }
        });
    });
}



